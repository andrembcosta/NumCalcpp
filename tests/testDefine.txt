#The first group of test cases will check for problems with functions and argument ids

#the program should return errors for test cases 1-3, 5,7 and 8. 4 and 6 should be succesful function
#definitions

define (1f x y) = (+ x y) #invalid fname, id start with number
define (f 1x y) = (+ x y) #invalid variable, id start with number
define (f x 1y) = (+ x y) #invalid variable, id start with number
define (f x y) = (+ x y)  #valid function, should be added succesfully
define (F X Y) = (+ x y)  #invalid function because rhs variables are different from lhs variables
define (F X Y) = (+ X Y)  #valid function, should be added succesfully
define (F* x y) = (* x y) #invalid because * is not a number or char
define (g *x y) = (* x y) #invalid for the same reason

#check if program recognize invalid commands, for example, typos when writing define
defien (f x) = (+ x x) #program should say: "Sorry, I don't understand this command" and move to next time

#this second block of tests looks at other possible problems
#all of them should give you errors
define ( ) = (+ x y) #invalid, no function name or arguments
define (g ) = (+ x y) #invalid, function with no args
define (g x x) = (+ x x) #invalid, repeated parameters
define (g x y)  (+ x y) #invalid, no equal sign
define (f x y) = (* x y) #invalid, redefinition of f
define (logb x y) = (* x y) #invalid, redefinition of basic math operation

#now we will add some valid functions, but we will play with spaces to make sure it does not
#confuse the program
        define        (    h         a       b) = (      f                  a b) #this should work, because f is defined already
define (ha      b) = (+            b           1) #this should be a different function from the previous one, as there is no space between h and a.

#now, lets look at problems on the RHS, because so far we looked most at the LHS

#some invalid definitions that should all return errors
define (a x y) = (+ x z) #invalid because z is not a parameter for a
define (a x y) = (b x y) #invalid, because b hasnt been defined
define (a x) = (a x) #invalid recursive call

#some valid definitions that involve numeric constants, all should be succesfully added
define (a x)  = (+ x 0xFFFFFFF) #hex numbers
define (b x)  = (+ x 1e+3) #scientific notation
define (c x)  = (+ x nan) #not a number

#some valid definitions that involve composition of functions, all are valid
define (aa x) = (a (a x))
define (bb x) = (a (f x (b x)))
define (cc x) = (c (c (c (c (c x)))))

#some problems with parenthesis and other unexpected characters
define (aaa x) = (a (a x) #missing parenthesis
define (bbb x) = (b (b (b x)))) #extra parenthesis
define (ccc x)) = (c (c x)) #extra parenthesis
define (aaa x)% = (+ x 0) #invalid % in the middle of the definition
define (aaa x) = (+ x 0)% #invalid % in the end of the definition

#function with a lot of variables, but still valid
define (ff x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20) = (+ (+  (+  (+  (+  (+  (+  (+  (+ (+ (+  (+  (+  (+  (+  (+  (+ (+ (+ x1 x2) x3) x4) x5) x6) x7) x8) x9) x10) x11) x12) x13) x14) x15) x16) x17) x18) x19) x20)

#function with very weird name and variable names, but still valid
define (f1234hdufhd xf2df2d yyf1djf) = (+ xf2df2d yyf1djf)
